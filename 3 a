

#include <stdio.h>
#include <stdlib.h>

int count; 

// Selection sort function
void selectionsort(int *a, int n) {
    int i, j, min, t;
    for (i = 0; i < n - 1; i++) {
        min = i;
        for (j = i + 1; j < n; j++) {
            if (*(a + j) < *(a + min)) {  // Corrected the comparison
                min = j;
            }
            count++;
        }
        if (min != i) {
            t = *(a + min);
            *(a + min) = *(a + i);
            *(a + i) = t;
        }
    }
}

// Tester function to test selection sort
void tester() {
    int *arr, n;
    printf("ENTER THE NUMBER OF ELEMENTS\n");
    scanf("%d", &n);
    
    arr = (int *)malloc(sizeof(int) * n);  // Allocating memory for the array
    if (arr == NULL) {
        printf("Memory allocation failed\n");
        return;
    }
    
    printf("ENTER THE ELEMENTS OF THE ARRAY\n");
    for (int i = 0; i < n; i++)
        scanf("%d", &arr[i]);
    
    printf("THE ELEMENTS OF THE ARRAY BEFORE SORTING\n");
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");
    
    selectionsort(arr, n);
    
    printf("THE ELEMENTS OF THE ARRAY AFTER SORTING\n");
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");
    
    free(arr);  // Freeing the allocated memory
}

// Plotter function to generate data for analysis
void plotter() {
    FILE *f;
    f = fopen("selectionsort.txt", "a");
    if (f == NULL) {
        printf("File opening failed\n");
        return;
    }
    
    int n = 10;
    while (n <= 30000) {
        int *a = (int *)malloc(sizeof(int) * n);  // Corrected memory allocation
        if (a == NULL) {
            printf("Memory allocation failed\n");
            fclose(f);
            return;
        }
        
        for (int i = 0; i < n; i++) {
            *(a + i) = i;  // Filling the array with ascending order elements
        }
        
        count = 0;
        selectionsort(a, n);
        fprintf(f, "%d\t%d\n", n, count);
        printf("%d\t%d\n", n, count);
        
        free(a);  // Freeing the allocated memory
        
        if (n < 10000)
            n *= 10;
        else
            n += 10000;
    }
    fclose(f);
}

// Main function with a menu for testing and plotting
void main() {
    for (;;) {
        int key;
        printf("ENTER THE CHOICE \n1.TO TEST \n2.TO PLOT\n0 TO EXIT\n");
        scanf("%d", &key);
        switch (key) {
            case 1:
                tester();
                break;
            case 2:
                plotter();
                break;
            case 0:
                exit(0);  // Exiting the program with exit code 0
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
}
